{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/processErrorMessage.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","helpers/calendar-messages-en.js","actions/ui.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","customFetch","endpoint","data","method","url","fetch","headers","body","JSON","stringify","customFetchToken","token","localStorage","getItem","processErrorMessage","errors","Object","values","v","msg","join","prepareEvents","event","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","setToken","setItem","Date","getTime","login","user","startLogout","dispatch","clear","useForm","useState","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","handleLoginInputChange","rName","rEmail","rPassword","rPassword2","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","response","json","ok","uid","Swal","fire","placeholder","onChange","required","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","uiOpenModal","Navbar","useSelector","onClick","CalendarEvent","title","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","initEvent","notes","CalendarModal","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","overlayClassName","closeTimeoutMS","momentStart","momentEnd","isSameOrAfter","console","error","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","disabled","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onView","onSelectEvent","view","components","selectable","onSelectSlot","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.098831a4.chunk.js","sourcesContent":["export const types = {\n  uiOpenModal: '[ui] openModal',\n  uiCloseModal: '[ui] closeModal',\n\n  eventSetActive: '[event] Set Active',\n  eventLogout: '[event] Logout event',\n  eventAddNew: '[event] Add New',\n  eventClearActiveEvent:  '[event] Clear Active Event',\n  eventUpdated:  '[event] Event Updated',\n  eventDeleted:  '[event] Event Deleted',\n  eventLoaded:  '[event] Event Loaded',\n\n  authChecking: '[auth] Checking login state',\n  authCheckingFinish: '[auth] Finish checking login state',\n  authStartLogin: '[auth] Start login',\n  authLogin: '[auth] Login',\n  authStartRegister: '[auth] Start register',\n  authStartTokenRenew: '[auth] Start token renew',\n  authLogout: '[auth] Start Logout',\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n  checking: true,\n  // uid: null,\n  // name: null\n};\n\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.authLogin:\n      return {\n        ...state,\n        ...action.payload,\n        checking: false,\n      };\n\n    case types.authStartRegister:\n      return {\n        ...state,\n        ...action.payload,\n        checking: false,\n      };\n\n    case types.authCheckingFinish:\n      return {\n        ...state,\n        checking: false,\n      };\n\n    case types.authLogout:\n      return {\n        checking: false,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { types } from \"../types/types\";\n\n// {\n//   title: \"initialState\",\n//   start: moment().toDate(),\n//   end: moment().add(2, \"hours\").toDate(),\n//   bgcolor: \"#fafafa\",\n//   user: {\n//     _id: \"123\",\n//     name: \"userName\",\n//   },\n// },\n\nconst initialState = {\n  events: [],\n  activeEvent: null,\n};\n\nexport const calendarReducer = (state = initialState, action) => {\n  switch (action?.type) {\n    case types.eventSetActive:\n      return { ...state, activeEvent: action?.payload };\n\n    case types.eventAddNew:\n      return { ...state, events: [...state.events, action?.payload] };\n\n    case types.eventClearActiveEvent:\n      return { ...state, activeEvent: null };\n\n    case types.eventUpdated:\n      return {\n        ...state,\n        events: state.events.map((e) =>\n          e.id === action.payload.id ? action.payload : e\n        ),\n      };\n\n    case types.eventDeleted:\n      return {\n        ...state,\n        events: state.events.filter((e) => e.id !== state.activeEvent.id),\n        activeEvent: null,\n      };\n\n    case types.eventLoaded:\n      return {\n        ...state,\n        events: [...action.payload],\n      };\n\n    case types.eventLogout:\n      return { ...initialState };\n\n    default:\n      return state;\n  }\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n  modalOpen: false\n}\n\nexport const uiReducer = (state = initialState , action) => {\n  switch (action?.type) {\n    case types.uiOpenModal:\n      return {\n        ...state,\n        modalOpen: true\n      };\n    case types.uiCloseModal:\n      return {\n        ...state,\n        modalOpen: false\n      };\n\n    default:\n      return state;\n  }\n}","import {combineReducers} from 'redux'\nimport { authReducer } from './authReducer'\nimport { calendarReducer } from './calendarReducer'\nimport { uiReducer } from './uiReducer'\n\nexport const rootReducer = combineReducers({\n  ui: uiReducer,\n  calendar: calendarReducer,\n  auth: authReducer,\n})","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducers/rootReducer\";\n\nconst composeEnhancers =\n  (typeof window !== \"undefined\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(thunk)\n  )\n);\n","const baseUrl = process.env.REACT_APP_API;\n\nexport const customFetch = (endpoint, data, method = \"GET\") => {\n  const url = `${baseUrl}/${endpoint}`;\n\n  if (method === \"GET\") {\n    return fetch(url);\n  }\n\n  return fetch(url, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n    method,\n  });\n};\n\nexport const customFetchToken = (endpoint, data, method = \"GET\") => {\n  const token = localStorage.getItem(\"token\") ?? \"\";\n  const url = `${baseUrl}/${endpoint}`;\n\n  if (method === \"GET\") {\n    return fetch(url, {\n      method,\n      headers: {\n        \"x-token\": token,\n      },\n    });\n  }\n\n  return fetch(url, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-token\": token,\n    },\n    body: JSON.stringify(data),\n    method,\n  });\n};\n","export const processErrorMessage = (errors) => {\n  return Object.values(errors).map((v) => `<p>${v?.msg}</p>`).join()\n}","import moment from \"moment\";\n\nexport const prepareEvents = (events = []) =>\n  events.map((event) => ({\n    ...event,\n    end: moment(event.end).toDate(),\n    start: moment(event.start).toDate(),\n  }));\n","import Swal from \"sweetalert2\";\nimport { customFetchToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport { processErrorMessage } from \"../helpers/processErrorMessage\";\nimport { types } from \"../types/types\";\n\nconst eventAddNew = (event) => ({\n  type: types.eventAddNew,\n  payload: event,\n});\n\nexport const eventStartAddNew = (event) => {\n  return async (dispatch, getState) => {\n    try {\n      const {\n        auth: { uid: _id, name },\n      } = getState();\n      const response = await customFetchToken(\"events\", event, \"POST\");\n      const body = await response.json();\n      if (body.ok) {\n        event.id = body.msg.event.id;\n        event.user = {\n          _id,\n          name,\n        };\n        dispatch(eventAddNew(event));\n      } else {\n        Swal.fire(\"Error\", processErrorMessage(body?.errors), \"error\");\n      }\n    } catch (error) {\n      console.error(\"eventStartAddNew\", error);\n      Swal.fire(\"Error\", JSON.stringify(error), \"error\");\n    }\n  };\n};\n\nexport const eventSetActive = (event) => ({\n  type: types.eventSetActive,\n  payload: event,\n});\n\nexport const eventClearActiveEvent = () => ({\n  type: types.eventClearActiveEvent,\n});\n\nexport const eventStartUpdated = (event) => {\n  return async (dispatch) => {\n    try {\n      const response = await customFetchToken(\n        `events/${event.id}`,\n        event,\n        \"PUT\"\n      );\n      const body = await response.json();\n      if (body.ok) {\n        dispatch(eventUpdated(event));\n      } else {\n        Swal.fire(\"Error\", processErrorMessage(body?.errors), \"error\");\n      }\n    } catch (error) {\n      console.error(\"eventStartUpdated\", error);\n    }\n  };\n};\n\nconst eventUpdated = (event) => ({\n  type: types.eventUpdated,\n  payload: event,\n});\n\nexport const eventStartDelete = () => {\n  return async (dispatch, getState) => {\n    try {\n      const { id } = getState()?.calendar?.activeEvent;\n      const response = await customFetchToken(`events/${id}`, {}, \"DELETE\");\n      const body = await response.json();\n      if (body.ok) {\n        dispatch(eventDeleted());\n      } else {\n        Swal.fire(\"Error\", processErrorMessage(body?.errors), \"error\");\n      }\n    } catch (error) {\n      console.error(\"eventStartUpdated\", error);\n    }\n  };\n};\n\nconst eventDeleted = () => ({\n  type: types.eventDeleted,\n});\n\nexport const eventStartLoading = () => {\n  return async (dispatch) => {\n    try {\n      const response = await customFetchToken(\"events\");\n      const body = await response.json();\n      const events = prepareEvents(body?.msg?.events);\n      dispatch(eventLoaded(events));\n    } catch (error) {\n      console.error(\"eventStartLoading\", error);\n    }\n  };\n};\n\nconst eventLoaded = (events) => ({\n  type: types.eventLoaded,\n  payload: events,\n});\n\nexport const eventLogout = () => ({ type: types.eventLogout });\n","import Swal from \"sweetalert2\";\nimport { customFetch, customFetchToken } from \"../helpers/fetch\";\nimport { processErrorMessage } from \"../helpers/processErrorMessage\";\nimport { types } from \"../types/types\";\nimport { eventLogout } from \"./events\";\n\nconst setToken = (token) => {\n  localStorage.setItem(\"token\", token);\n  localStorage.setItem(\"token-init-date\", new Date().getTime());\n};\n\nconst login = (user) => ({\n  type: types.authLogin,\n  payload: user,\n});\n\nconst register = (user) => ({\n  type: types.authStartRegister,\n  payload: user,\n});\n\nconst checkingFinish = () => ({\n  type: types.authCheckingFinish,\n});\n\nconst logout = () => ({ type: types.authLogout });\n\nexport const startLogin = (email, password) => {\n  return async (dispatch) => {\n    const response = await customFetch(\"auth\", { email, password }, \"POST\");\n    const body = await response.json();\n    if (body.ok) {\n      setToken(body.token);\n      dispatch(\n        login({\n          uid: body.uid,\n          name: body.name,\n        })\n      );\n    } else {\n      Swal.fire(\"Error\", processErrorMessage(body?.errors), \"error\");\n    }\n  };\n};\n\nexport const startRegister = (name, email, password) => {\n  return async (dispatch) => {\n    const response = await customFetch(\n      \"auth/new\",\n      { name, email, password },\n      \"POST\"\n    );\n    const body = await response.json();\n    if (body.ok) {\n      setToken(body.token);\n      dispatch(\n        register({\n          uid: body.uid,\n          name: body.name,\n        })\n      );\n    } else {\n      Swal.fire(\"Error\", processErrorMessage(body?.errors), \"error\");\n    }\n  };\n};\n\nexport const startChecking = () => {\n  return async (dispatch) => {\n    const response = await customFetchToken(\"auth/renew\");\n    const body = await response.json();\n    if (body.ok) {\n      setToken(body.token);\n      dispatch(\n        login({\n          uid: body.uid,\n          name: body.name,\n        })\n      );\n    } else {\n      dispatch(checkingFinish());\n    }\n  };\n};\n\nexport const startLogout = () => {\n  return (dispatch) => {\n    localStorage.clear();\n    dispatch(eventLogout());\n    dispatch(logout());\n  };\n};\n","import { useState } from \"react\";\n\nexport const useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const reset = () => {\n    setValues(initialState);\n  };\n\n  const handleInputChange = ({ target }) =>\n    setValues({\n      ...values,\n      [target.name]: target.value,\n    });\n  return [values, handleInputChange, reset];\n};\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { startLogin, startRegister } from \"../../actions/auth\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport \"./login.css\";\r\n\r\nexport const LoginScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [{ lEmail, lPassword }, handleLoginInputChange] = useForm({\r\n    lEmail: \"1@email.com\",\r\n    lPassword: \"123123\",\r\n  });\r\n\r\n  const [{ rName, rEmail, rPassword, rPassword2 }, handleRegisterInputChange] =\r\n    useForm({\r\n      rName: \"lol\",\r\n      rEmail: \"1@email.com\",\r\n      rPassword: \"123123\",\r\n      rPassword2: \"123123\",\r\n    });\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    dispatch(startLogin(lEmail, lPassword));\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n    if (rPassword !== rPassword2) {\r\n      Swal.fire(\"Error\", \"Check passwords\", \"error\");\r\n      return;\r\n    }\r\n\r\n    dispatch(startRegister(rName, rEmail, rPassword));\r\n  };\r\n  return (\r\n    <div className=\"container login-container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 login-form-1\">\r\n          <h3>Log in</h3>\r\n          <form onSubmit={handleLogin}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"email\"\r\n                name=\"lEmail\"\r\n                className=\"form-control\"\r\n                placeholder=\"Email\"\r\n                value={lEmail}\r\n                onChange={handleLoginInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                name=\"lPassword\"\r\n                className=\"form-control\"\r\n                placeholder=\"Password\"\r\n                value={lPassword}\r\n                onChange={handleLoginInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"col-md-6 login-form-2\">\r\n          <h3>Register</h3>\r\n          <form onSubmit={handleRegister}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"rName\"\r\n                className=\"form-control\"\r\n                placeholder=\"Name\"\r\n                value={rName}\r\n                onChange={handleRegisterInputChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"email\"\r\n                name=\"rEmail\"\r\n                className=\"form-control\"\r\n                placeholder=\"Email\"\r\n                value={rEmail}\r\n                onChange={handleRegisterInputChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                name=\"rPassword\"\r\n                className=\"form-control\"\r\n                placeholder=\"Password\"\r\n                value={rPassword}\r\n                onChange={handleRegisterInputChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                name=\"rPassword2\"\r\n                className=\"form-control\"\r\n                placeholder=\"Repeat password\"\r\n                value={rPassword2}\r\n                onChange={handleRegisterInputChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"submit\"\r\n                className=\"btnSubmit\"\r\n                value=\"Create account\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const messages = {\r\n  allDay: 'all Day',\r\n  previous: '<',\r\n  next: '>',\r\n  today: 'Today',\r\n  month: 'Month',\r\n  week: 'Week',\r\n  day: 'Day',\r\n  agenda: 'Schedule',\r\n  date: 'Date',\r\n  time: 'Hour',\r\n  event: 'Event',\r\n  noEventsInRange: 'There are no events in this range',\r\n  showMore: total => `+ Show more (${total})`\r\n};","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({\n  type: types.uiOpenModal,\n});\n\nexport const uiCloseModal = () => ({\n  type: types.uiCloseModal,\n});\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startLogout } from \"../../actions/auth\";\r\n\r\nexport const Navbar = () => {\r\n  const dispatch = useDispatch();\r\n  const { name } = useSelector((state) => state.auth);\r\n\r\n  const handleClick = () => {\r\n    dispatch(startLogout());\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n      <span className=\"navbar-brand\">{name}</span>\r\n      <button className=\"btn btn-outline-danger\" onClick={handleClick}>\r\n        <i className=\"fas fa-sign-out-alt\"></i>\r\n        <span> Exit</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n  const { title, user} = event;\r\n  return (\r\n    <div>\r\n      <strong>{title}</strong>\r\n      <strong> - {user?.name}</strong>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport moment from \"moment\";\nimport Swal from \"sweetalert2\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uiCloseModal } from \"../../actions/ui\";\nimport {\n  eventClearActiveEvent,\n  eventStartAddNew,\n  eventStartUpdated,\n} from \"../../actions/events\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\n\nModal.setAppElement(\"#root\");\n\nconst now = moment().minutes(0).seconds(0).add(1, \"hours\");\n\nconst initEvent = {\n  title: \"\",\n  notes: \"\",\n  start: now.toDate(),\n  end: now.add(1, \"hours\").toDate(),\n};\n\nexport const CalendarModal = () => {\n  const dispatch = useDispatch();\n\n  const {\n    ui: { modalOpen },\n    calendar: { activeEvent },\n  } = useSelector((state) => state);\n\n  const [formValues, setFormValues] = useState(initEvent);\n\n  const { notes, title, start, end } = formValues;\n\n  useEffect(() => {\n    if (!!activeEvent) {\n      setFormValues(activeEvent);\n    } else {\n      setFormValues(initEvent);\n    }\n  }, [activeEvent, setFormValues]);\n\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target?.name]: target?.value,\n    });\n  };\n\n  const closeModal = () => {\n    dispatch(uiCloseModal());\n    dispatch(eventClearActiveEvent());\n    setFormValues(initEvent);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const momentStart = moment(start);\n    const momentEnd = moment(end);\n    if (momentStart.isSameOrAfter(momentEnd)) {\n      return Swal.fire(\"Error\", \"End date must be higher\", \"error\");\n    }\n\n    // TODO: save on DB\n    if (activeEvent) {\n      dispatch(eventStartUpdated(formValues));\n    } else {\n      dispatch(eventStartAddNew(formValues));\n    }\n\n    closeModal();\n  };\n  return (\n    <div>\n      <Modal\n        isOpen={modalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        className=\"modal\"\n        overlayClassName=\"modal-fondo\"\n        closeTimeoutMS={200}\n      >\n        <h1>{activeEvent ? \"Edit Event\" : \"New Event\"}</h1>\n        <hr />\n        <form className=\"container\" onSubmit={onSubmit}>\n          <div className=\"form-group\">\n            <label>Start Date & Hour</label>\n            <DateTimePicker\n              onChange={(e) =>\n                handleInputChange({ target: { name: \"start\", value: e } })\n              }\n              value={start}\n              className=\"form-control\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Start Date & Hour</label>\n            <DateTimePicker\n              onChange={(e) =>\n                handleInputChange({ target: { name: \"end\", value: e } })\n              }\n              value={end}\n              minDate={start}\n              className=\"form-control\"\n            />\n          </div>\n\n          <hr />\n          <div className=\"form-group\">\n            <label>Title</label>\n            <input\n              type=\"text\"\n              className={`form-control ${!title && \"is-invalid\"}`}\n              placeholder=\"Event title\"\n              name=\"title\"\n              autoComplete=\"off\"\n              value={title}\n              onChange={handleInputChange}\n            />\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\n              Short description\n            </small>\n          </div>\n\n          <div className=\"form-group\">\n            <textarea\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Notes\"\n              rows=\"5\"\n              name=\"notes\"\n              value={notes}\n              onChange={handleInputChange}\n            ></textarea>\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\n              Additional info\n            </small>\n          </div>\n\n          <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\n            <i className=\"far fa-save\"></i>\n            <span> Save</span>\n          </button>\n        </form>\n      </Modal>\n    </div>\n  );\n};\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uiOpenModal } from '../../actions/ui'\n\nexport const AddNewFab = () => {\n  const dispatch = useDispatch()\n\n  const { activeEvent } = useSelector((state) => state.calendar);\n  const handleClick = () =>  dispatch(uiOpenModal())\n  return (\n    <button\n      className='btn btn-primary fab'\n      onClick={handleClick}\n    >\n      {activeEvent\n        ? <i className='fas fa-edit'></i>\n        : <i className='fas fa-plus'></i>\n      }\n    </button>\n  )\n}\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { eventStartDelete } from \"../../actions/events\";\n\nexport const DeleteEventFab = () => {\n  const dispatch = useDispatch();\n  const { activeEvent } = useSelector((state) => state.calendar);\n\n  const handleClick = () => dispatch(eventStartDelete());\n  return (\n    <button\n      className=\"btn btn-danger fab-danger\"\n      onClick={handleClick}\n      disabled={!activeEvent}\n    >\n      <i className=\"fas fa-trash\"></i>\n    </button>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n\r\nimport { messages } from \"../../helpers/calendar-messages-en\";\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\nimport { Navbar } from \"../ui/Navbar\";\r\nimport { CalendarEvent } from \"./CalendarEvent\";\r\nimport { CalendarModal } from \"./CalendarModal\";\r\nimport {\r\n  eventClearActiveEvent,\r\n  eventSetActive,\r\n  eventStartLoading,\r\n} from \"../../actions/events\";\r\nimport { AddNewFab } from \"../ui/AddNewFab\";\r\nimport { DeleteEventFab } from \"../ui/DeleteEventFab\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    calendar: { events },\r\n    auth: { uid },\r\n  } = useSelector((state) => state);\r\n  const [lastView, setLastView] = useState(\r\n    localStorage.getItem(\"lastView\") ?? \"month\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(eventStartLoading());\r\n  }, [dispatch]);\r\n\r\n  const onDoubleClick = (e) => {\r\n    dispatch(uiOpenModal());\r\n  };\r\n  const onSelect = (e) => {\r\n    dispatch(eventSetActive(e));\r\n  };\r\n  const onView = (e) => {\r\n    setLastView(e);\r\n    localStorage.setItem(\"lastView\", e);\r\n  };\r\n\r\n  const eventStyleGetter = (event, start, end, isSelected) => {\r\n    const isHis = event?.user?._id === uid;\r\n    const style = {\r\n      backgroundColor: isHis ? \"#367CF7\" : \"#465660\",\r\n      borderRadius: \"0px\",\r\n      opacity: \"0.8\",\r\n      display: \"block\",\r\n      color: \"white\",\r\n    };\r\n    return {\r\n      style,\r\n    };\r\n  };\r\n\r\n  const selectSlot = () => dispatch(eventClearActiveEvent());\r\n\r\n  return (\r\n    <div className=\"calendar-screen\">\r\n      <Navbar />\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={events}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        messages={messages}\r\n        eventPropGetter={eventStyleGetter}\r\n        onDoubleClickEvent={onDoubleClick}\r\n        onView={onView}\r\n        onSelectEvent={onSelect}\r\n        view={lastView}\r\n        components={{\r\n          event: CalendarEvent,\r\n        }}\r\n        selectable={true}\r\n        onSelectSlot={selectSlot}\r\n      />\r\n      <DeleteEventFab />\r\n      <AddNewFab />\r\n      <CalendarModal />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst PrivateRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route {...rest}\n      component={(props) => (\n        isAuthenticated\n          ? <Component {...props} />\n          : <Redirect to=\"/login\" />\n      )}\n    />\n  )\n}\n\nPrivateRoute.propTypes= {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n}\n\nexport default PrivateRoute;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst PublicRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route {...rest}\n      component={(props) => (\n        isAuthenticated\n        ? <Redirect to=\"/\" />\n        : <Component {...props} />\n      )}\n    />\n  )\n}\n\nPublicRoute.propTypes= {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n}\n\nexport default PublicRoute;","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport { startChecking } from \"../actions/auth\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport PublicRoute from \"./PublicRoute\";\r\n\r\nexport const AppRouter = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { checking, uid } = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    dispatch(startChecking());\r\n  }, [dispatch]);\r\n\r\n  if (checking) {\r\n    return <h4>wait...</h4>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <div>\r\n          <Switch>\r\n            <PublicRoute\r\n              exact\r\n              path=\"/login\"\r\n              component={LoginScreen}\r\n              isAuthenticated={!!uid}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/\"\r\n              component={CalendarScreen}\r\n              isAuthenticated={!!uid}\r\n            />\r\n            <Redirect to=\"/\" />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/store'\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\nexport const CalendarApp = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppRouter />\r\n    </Provider>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CalendarApp } from \"./CalendarApp\";\r\n\r\nimport \"./styles.css\";\r\n\r\nReactDOM.render(<CalendarApp />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}